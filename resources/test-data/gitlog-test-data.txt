commit 9260b1f0cc7ac1a35fdf0a1fb9e861eb9ff4569c
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Sat May 18 18:18:56 2024 +0530

    Add information about pgvector in readme file
    
    Adding some basic information about pgvector in readme file gives
    idea about project dependecies

diff --git a/README.md b/README.md
index 71d9c4f..e571bff 100644
--- a/README.md
+++ b/README.md
@@ -50,6 +50,24 @@ FIXME: listing of options this app accepts.
 
 ...
 
+## Dependencies
+
+### pgvector
+
+pgvector is a postgres plugin. It allows vector embeddings to be
+stored and searched.
+
+```
+$ cd project-root
+$ docker-compose up
+```
+
+```
+$ pgcli -h localhost -p 5432 -U git_agent -d gitagent
+```
+
+[Refer to pgvector docs](https://github.com/pgvector/pgvector?tab=readme-ov-file#postgresapp)
+
 ## TODO
 
 1. Add github actions

commit 1c6c65c98fff25633f46563e7c7d9b5bd5a3ea89
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Sat May 18 18:12:36 2024 +0530

    Add pgvector container to compose file
    
    Using pgvector for similarity search simply because I want to
    try it out.

diff --git a/docker-compose.yml b/docker-compose.yml
new file mode 100644
index 0000000..d60631d
--- /dev/null
+++ b/docker-compose.yml
@@ -0,0 +1,12 @@
+version: "3.8"
+
+services:
+  pgvector:
+    image: pgvector/pgvector:pg16
+    container_name: pgvector_container
+    environment:
+      POSTGRES_DB: gitagent
+      POSTGRES_USER: git_agent
+      POSTGRES_PASSWORD: wildmushroom
+    ports:
+      - "5432:5432" 

commit 71ef20247f3b77ea76b9e504960d8af5474c0621
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Mon May 13 17:05:58 2024 +0530

    Add TODO section to the readme file
    
    TODO section in readme file will help document pending items
    in repository only rather than going for some external tool.
    Eventually, TODO section can be converted into an org file.

diff --git a/README.md b/README.md
index 9e5a931..71d9c4f 100644
--- a/README.md
+++ b/README.md
@@ -50,11 +50,9 @@ FIXME: listing of options this app accepts.
 
 ...
 
-### Any Other Sections
+## TODO
 
-### That You Think
-
-### Might be Useful
+1. Add github actions
 
 ## License
 

commit 8ebbcb45dadc60c30613208fa800bc4c6bbab7ec
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Mon May 13 17:02:14 2024 +0530

    Use -p option in git-log function
    
    -p option adds code diff to the git log. By documenting actual changes
    in DB, I wish agent will be able to answer some code related
    questions as well.

diff --git a/src/git_agent/indexing/core.clj b/src/git_agent/indexing/core.clj
index f2d1774..5dbd1d2 100644
--- a/src/git_agent/indexing/core.clj
+++ b/src/git_agent/indexing/core.clj
@@ -27,9 +27,9 @@
                 "-C"
                 path
                 "log"
+                "-p"
                 (format "--skip=%s" skip)
-                (format "--max-count=%s" max-count)
-                "--name-status")
+                (format "--max-count=%s" max-count))
         commits (if (= 0 (:exit log))
                   (-> log
                       :out

commit dc1b6fdbd391f77f62abca1f738e1bdc22cd0578
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Mon May 13 16:52:33 2024 +0530

    Update README with examples and architecture overview
    
    With examples, it is easier to understand how the project could be
    used.
    
    With architecture overview, it is easier to understand different
    modules of the system. And we can build those modules in parts
    to build the complete agent.

diff --git a/README.md b/README.md
index 2f014ad..9e5a931 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,31 @@
 # git-agent
 
+Git agent would answer various questions based on the log of commit messages and code diffs. Following are some of the examples:
+
+Code Contribution Analysis: Who are the top contributors to this repository?
+
+Bug Fix Identification: Which commits in the last week addressed reported bugs?
+
+Feature Development Tracking: What features were added or removed in the last month?
+
+Code Quality Metrics: What is the trend of code complexity over the last six months?
+
+Release Note Generation: Generate release notes based on the commits since the last release.
+
+Issue Closure Prediction: Based on past data, when is the estimated time for issue closure?
+
+Code Ownership Identification: Who are the primary maintainers of this specific module or file?
+
+Hotspot Analysis: Identify areas of the codebase that have been frequently modified recently.
+
+Developer Activity Tracking: How active has each developer been in terms of commits and reviews over the past quarter?
+
+## Architecture
+
+For building agent workflow, planning, creating task, execution and feedback are crucial part of the architecture.
+
+For long term memory, a vectorstore would be used.
+
 ![Git agent overview](./resources/images/git_agent_overview.png)
 
 ## Installation

commit 0f7aa57e81b2a1bc2e0582b3932675563110c456
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Sat May 11 18:55:45 2024 +0530

    Show architecture diagram for the agent workflow in readme
    
    High level architecture diagram is important to give direction
    to code changes.

diff --git a/README.md b/README.md
index adc6eff..2f014ad 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,6 @@
 # git-agent
 
-FIXME: description
+![Git agent overview](./resources/images/git_agent_overview.png)
 
 ## Installation
 
@@ -25,7 +25,9 @@ FIXME: listing of options this app accepts.
 ...
 
 ### Any Other Sections
+
 ### That You Think
+
 ### Might be Useful
 
 ## License
diff --git a/resources/images/git_agent_overview.png b/resources/images/git_agent_overview.png
new file mode 100644
index 0000000..c7dcefc
Binary files /dev/null and b/resources/images/git_agent_overview.png differ

commit c607629e491346374d57d981c81dfd4cf8973696
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Sat May 11 18:45:11 2024 +0530

    Implement functionality to read git log
    
    Retrieves git log for given repository. This is a required step
    for indexing documents in db.
    
    Next steps will be:
    1. vector embedding each commit message using embedding model
    2. indexing embedded documents in db.
    
    Both the steps will be performed in iteration where chunk of commits
    will be fetched and these to operations will be performed on it.

diff --git a/.gitignore b/.gitignore
index 4999250..b8bc9d9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -12,4 +12,5 @@ pom.xml.asc
 .hgignore
 .hg/
 .clj-kondo
-.lsp
\ No newline at end of file
+.lsp
+.calva
\ No newline at end of file
diff --git a/src/git_agent/indexing/core.clj b/src/git_agent/indexing/core.clj
new file mode 100644
index 0000000..f2d1774
--- /dev/null
+++ b/src/git_agent/indexing/core.clj
@@ -0,0 +1,44 @@
+(ns git-agent.indexing.core
+  (:require [clojure.java.shell :refer [sh]]
+            [clojure.string :as cs]))
+
+(defn git-log
+  "Retrieve git log for a given repository path.
+  
+  Arguments:
+    - path: A string representing the path to the git repository.
+    - :max-count (optional, default 30): Maximum number of commits to return.
+    - :skip (optional, default 0): Number of commits to skip.
+  
+  Returns a map containing:
+    - :commits: A sequence of maps, each representing a commit.
+    - :cursor: The number of commits skipped plus the count of commits returned.
+    - :next?: A boolean indicating if there are more commits to fetch.
+  
+  If an exception occurs during the execution of git log command,
+  a custom exception is thrown with the following structure:
+    {:type :git-log-exception, :err <error message>}
+  
+  Example:
+    (git-log \"/path/to/repository\" :max-count 10 :skip 5)
+  "
+  [path & {:keys [max-count skip] :or {max-count 30 skip 0}}]
+  (let [log (sh "git"
+                "-C"
+                path
+                "log"
+                (format "--skip=%s" skip)
+                (format "--max-count=%s" max-count)
+                "--name-status")
+        commits (if (= 0 (:exit log))
+                  (-> log
+                      :out
+                      (cs/split #"commit ")
+                      rest)
+                  (throw (ex-info "git log caused an exception"
+                                  {:type :git-log-exception
+                                   :err (:err log)})))
+        rs-count (count commits)]
+    {:commits commits
+     :cursor (+ skip rs-count)
+     :next? (= rs-count max-count)}))
\ No newline at end of file
diff --git a/test/git_agent/indexing/core_test.clj b/test/git_agent/indexing/core_test.clj
new file mode 100644
index 0000000..8e13b88
--- /dev/null
+++ b/test/git_agent/indexing/core_test.clj
@@ -0,0 +1,22 @@
+(ns git-agent.indexing.core-test
+  (:require [clojure.test :refer [deftest testing is]]
+            [git-agent.indexing.core :as indexing]))
+
+(def repo "/Users/anikethendre/projects/instructor-clj")
+
+(deftest read-git-log-test
+  (testing "Read git log"
+    (is (= [:commits :cursor :next?] (keys (indexing/git-log repo)))
+        "git-log should return a map with list of commits & cursor")
+    (is (= 5 (-> (indexing/git-log repo :max-count 5)
+                 :commits
+                 count))
+        "Number of commits returned should respect max-count param")
+    (is (= 10 (:cursor (indexing/git-log repo :skip 5 :max-count 5)))
+        "cursor should be 10 i.e. skip 5 commits and take next 5 commits")))
+
+(deftest vector-embedding-test)
+
+(deftest db-indexing-test)
+
+(deftest similarity-search-test)
\ No newline at end of file

commit eb3324880a315159edb2fffa82fe5e5c8bf47fde
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Fri May 10 19:40:12 2024 +0530

    Add VSCode generated directories to gitignore
    
    VSCode generates files because of lsp, and clj-kondo plugins.
    These generated files are not for tracking.

diff --git a/.gitignore b/.gitignore
index d956ab0..4999250 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,3 +11,5 @@ pom.xml.asc
 /.prepl-port
 .hgignore
 .hg/
+.clj-kondo
+.lsp
\ No newline at end of file

commit e480232232c95ad834feff54dd60dde82e80dbff
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Fri May 10 19:35:48 2024 +0530

    Initialise a clojure project

diff --git a/.gitignore b/.gitignore
index a4cb69a..d956ab0 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,14 +1,13 @@
+/target
+/classes
+/checkouts
+profiles.clj
 pom.xml
 pom.xml.asc
 *.jar
 *.class
-/lib/
-/classes/
-/target/
-/checkouts/
-.lein-deps-sum
-.lein-repl-history
-.lein-plugins/
-.lein-failures
-.nrepl-port
-.cpcache/
+/.lein-*
+/.nrepl-port
+/.prepl-port
+.hgignore
+.hg/
diff --git a/CHANGELOG.md b/CHANGELOG.md
new file mode 100644
index 0000000..f7f88ad
--- /dev/null
+++ b/CHANGELOG.md
@@ -0,0 +1,24 @@
+# Change Log
+All notable changes to this project will be documented in this file. This change log follows the conventions of [keepachangelog.com](http://keepachangelog.com/).
+
+## [Unreleased]
+### Changed
+- Add a new arity to `make-widget-async` to provide a different widget shape.
+
+## [0.1.1] - 2024-05-10
+### Changed
+- Documentation on how to make the widgets.
+
+### Removed
+- `make-widget-sync` - we're all async, all the time.
+
+### Fixed
+- Fixed widget maker to keep working when daylight savings switches over.
+
+## 0.1.0 - 2024-05-10
+### Added
+- Files from the new template.
+- Widget maker public API - `make-widget-sync`.
+
+[Unreleased]: https://sourcehost.site/your-name/git-agent/compare/0.1.1...HEAD
+[0.1.1]: https://sourcehost.site/your-name/git-agent/compare/0.1.0...0.1.1
diff --git a/LICENSE b/LICENSE
index 76b773c..2315126 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,21 +1,280 @@
-MIT License
-
-Copyright (c) 2024 Aniket Hendre
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
+Eclipse Public License - v 2.0
+
+    THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE
+    PUBLIC LICENSE ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION
+    OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.
+
+1. DEFINITIONS
+
+"Contribution" means:
+
+  a) in the case of the initial Contributor, the initial content
+     Distributed under this Agreement, and
+
+  b) in the case of each subsequent Contributor:
+     i) changes to the Program, and
+     ii) additions to the Program;
+  where such changes and/or additions to the Program originate from
+  and are Distributed by that particular Contributor. A Contribution
+  "originates" from a Contributor if it was added to the Program by
+  such Contributor itself or anyone acting on such Contributor's behalf.
+  Contributions do not include changes or additions to the Program that
+  are not Modified Works.
+
+"Contributor" means any person or entity that Distributes the Program.
+
+"Licensed Patents" mean patent claims licensable by a Contributor which
+are necessarily infringed by the use or sale of its Contribution alone
+or when combined with the Program.
+
+"Program" means the Contributions Distributed in accordance with this
+Agreement.
+
+"Recipient" means anyone who receives the Program under this Agreement
+or any Secondary License (as applicable), including Contributors.
+
+"Derivative Works" shall mean any work, whether in Source Code or other
+form, that is based on (or derived from) the Program and for which the
+editorial revisions, annotations, elaborations, or other modifications
+represent, as a whole, an original work of authorship.
+
+"Modified Works" shall mean any work in Source Code or other form that
+results from an addition to, deletion from, or modification of the
+contents of the Program, including, for purposes of clarity any new file
+in Source Code form that contains any contents of the Program. Modified
+Works shall not include works that contain only declarations,
+interfaces, types, classes, structures, or files of the Program solely
+in each case in order to link to, bind by name, or subclass the Program
+or Modified Works thereof.
+
+"Distribute" means the acts of a) distributing or b) making available
+in any manner that enables the transfer of a copy.
+
+"Source Code" means the form of a Program preferred for making
+modifications, including but not limited to software source code,
+documentation source, and configuration files.
+
+"Secondary License" means either the GNU General Public License,
+Version 2.0, or any later versions of that license, including any
+exceptions or additional permissions as identified by the initial
+Contributor.
+
+2. GRANT OF RIGHTS
+
+  a) Subject to the terms of this Agreement, each Contributor hereby
+  grants Recipient a non-exclusive, worldwide, royalty-free copyright
+  license to reproduce, prepare Derivative Works of, publicly display,
+  publicly perform, Distribute and sublicense the Contribution of such
+  Contributor, if any, and such Derivative Works.
+
+  b) Subject to the terms of this Agreement, each Contributor hereby
+  grants Recipient a non-exclusive, worldwide, royalty-free patent
+  license under Licensed Patents to make, use, sell, offer to sell,
+  import and otherwise transfer the Contribution of such Contributor,
+  if any, in Source Code or other form. This patent license shall
+  apply to the combination of the Contribution and the Program if, at
+  the time the Contribution is added by the Contributor, such addition
+  of the Contribution causes such combination to be covered by the
+  Licensed Patents. The patent license shall not apply to any other
+  combinations which include the Contribution. No hardware per se is
+  licensed hereunder.
+
+  c) Recipient understands that although each Contributor grants the
+  licenses to its Contributions set forth herein, no assurances are
+  provided by any Contributor that the Program does not infringe the
+  patent or other intellectual property rights of any other entity.
+  Each Contributor disclaims any liability to Recipient for claims
+  brought by any other entity based on infringement of intellectual
+  property rights or otherwise. As a condition to exercising the
+  rights and licenses granted hereunder, each Recipient hereby
+  assumes sole responsibility to secure any other intellectual
+  property rights needed, if any. For example, if a third party
+  patent license is required to allow Recipient to Distribute the
+  Program, it is Recipient's responsibility to acquire that license
+  before distributing the Program.
+
+  d) Each Contributor represents that to its knowledge it has
+  sufficient copyright rights in its Contribution, if any, to grant
+  the copyright license set forth in this Agreement.
+
+  e) Notwithstanding the terms of any Secondary License, no
+  Contributor makes additional grants to any Recipient (other than
+  those set forth in this Agreement) as a result of such Recipient's
+  receipt of the Program under the terms of a Secondary License
+  (if permitted under the terms of Section 3).
+
+3. REQUIREMENTS
+
+3.1 If a Contributor Distributes the Program in any form, then:
+
+  a) the Program must also be made available as Source Code, in
+  accordance with section 3.2, and the Contributor must accompany
+  the Program with a statement that the Source Code for the Program
+  is available under this Agreement, and informs Recipients how to
+  obtain it in a reasonable manner on or through a medium customarily
+  used for software exchange; and
+
+  b) the Contributor may Distribute the Program under a license
+  different than this Agreement, provided that such license:
+     i) effectively disclaims on behalf of all other Contributors all
+     warranties and conditions, express and implied, including
+     warranties or conditions of title and non-infringement, and
+     implied warranties or conditions of merchantability and fitness
+     for a particular purpose;
+
+     ii) effectively excludes on behalf of all other Contributors all
+     liability for damages, including direct, indirect, special,
+     incidental and consequential damages, such as lost profits;
+
+     iii) does not attempt to limit or alter the recipients' rights
+     in the Source Code under section 3.2; and
+
+     iv) requires any subsequent distribution of the Program by any
+     party to be under a license that satisfies the requirements
+     of this section 3.
+
+3.2 When the Program is Distributed as Source Code:
+
+  a) it must be made available under this Agreement, or if the
+  Program (i) is combined with other material in a separate file or
+  files made available under a Secondary License, and (ii) the initial
+  Contributor attached to the Source Code the notice described in
+  Exhibit A of this Agreement, then the Program may be made available
+  under the terms of such Secondary Licenses, and
+
+  b) a copy of this Agreement must be included with each copy of
+  the Program.
+
+3.3 Contributors may not remove or alter any copyright, patent,
+trademark, attribution notices, disclaimers of warranty, or limitations
+of liability ("notices") contained within the Program from any copy of
+the Program which they Distribute, provided that Contributors may add
+their own appropriate notices.
+
+4. COMMERCIAL DISTRIBUTION
+
+Commercial distributors of software may accept certain responsibilities
+with respect to end users, business partners and the like. While this
+license is intended to facilitate the commercial use of the Program,
+the Contributor who includes the Program in a commercial product
+offering should do so in a manner which does not create potential
+liability for other Contributors. Therefore, if a Contributor includes
+the Program in a commercial product offering, such Contributor
+("Commercial Contributor") hereby agrees to defend and indemnify every
+other Contributor ("Indemnified Contributor") against any losses,
+damages and costs (collectively "Losses") arising from claims, lawsuits
+and other legal actions brought by a third party against the Indemnified
+Contributor to the extent caused by the acts or omissions of such
+Commercial Contributor in connection with its distribution of the Program
+in a commercial product offering. The obligations in this section do not
+apply to any claims or Losses relating to any actual or alleged
+intellectual property infringement. In order to qualify, an Indemnified
+Contributor must: a) promptly notify the Commercial Contributor in
+writing of such claim, and b) allow the Commercial Contributor to control,
+and cooperate with the Commercial Contributor in, the defense and any
+related settlement negotiations. The Indemnified Contributor may
+participate in any such claim at its own expense.
+
+For example, a Contributor might include the Program in a commercial
+product offering, Product X. That Contributor is then a Commercial
+Contributor. If that Commercial Contributor then makes performance
+claims, or offers warranties related to Product X, those performance
+claims and warranties are such Commercial Contributor's responsibility
+alone. Under this section, the Commercial Contributor would have to
+defend claims against the other Contributors related to those performance
+claims and warranties, and if a court requires any other Contributor to
+pay any damages as a result, the Commercial Contributor must pay
+those damages.
+
+5. NO WARRANTY
+
+EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT
+PERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN "AS IS"
+BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
+IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF
+TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR
+PURPOSE. Each Recipient is solely responsible for determining the
+appropriateness of using and distributing the Program and assumes all
+risks associated with its exercise of rights under this Agreement,
+including but not limited to the risks and costs of program errors,
+compliance with applicable laws, damage to or loss of data, programs
+or equipment, and unavailability or interruption of operations.
+
+6. DISCLAIMER OF LIABILITY
+
+EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT
+PERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS
+SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST
+PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
+EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+7. GENERAL
+
+If any provision of this Agreement is invalid or unenforceable under
+applicable law, it shall not affect the validity or enforceability of
+the remainder of the terms of this Agreement, and without further
+action by the parties hereto, such provision shall be reformed to the
+minimum extent necessary to make such provision valid and enforceable.
+
+If Recipient institutes patent litigation against any entity
+(including a cross-claim or counterclaim in a lawsuit) alleging that the
+Program itself (excluding combinations of the Program with other software
+or hardware) infringes such Recipient's patent(s), then such Recipient's
+rights granted under Section 2(b) shall terminate as of the date such
+litigation is filed.
+
+All Recipient's rights under this Agreement shall terminate if it
+fails to comply with any of the material terms or conditions of this
+Agreement and does not cure such failure in a reasonable period of
+time after becoming aware of such noncompliance. If all Recipient's
+rights under this Agreement terminate, Recipient agrees to cease use
+and distribution of the Program as soon as reasonably practicable.
+However, Recipient's obligations under this Agreement and any licenses
+granted by Recipient relating to the Program shall continue and survive.
+
+Everyone is permitted to copy and distribute copies of this Agreement,
+but in order to avoid inconsistency the Agreement is copyrighted and
+may only be modified in the following manner. The Agreement Steward
+reserves the right to publish new versions (including revisions) of
+this Agreement from time to time. No one other than the Agreement
+Steward has the right to modify this Agreement. The Eclipse Foundation
+is the initial Agreement Steward. The Eclipse Foundation may assign the
+responsibility to serve as the Agreement Steward to a suitable separate
+entity. Each new version of the Agreement will be given a distinguishing
+version number. The Program (including Contributions) may always be
+Distributed subject to the version of the Agreement under which it was
+received. In addition, after a new version of the Agreement is published,
+Contributor may elect to Distribute the Program (including its
+Contributions) under the new version.
+
+Except as expressly stated in Sections 2(a) and 2(b) above, Recipient
+receives no rights or licenses to the intellectual property of any
+Contributor under this Agreement, whether expressly, by implication,
+estoppel or otherwise. All rights in the Program not expressly granted
+under this Agreement are reserved. Nothing in this Agreement is intended
+to be enforceable by any entity that is not a Contributor or Recipient.
+No third-party beneficiary rights are created under this Agreement.
+
+Exhibit A - Form of Secondary Licenses Notice
+
+"This Source Code may also be made available under the following
+Secondary Licenses when the conditions for such availability set forth
+in the Eclipse Public License, v. 2.0 are satisfied: GNU General Public
+License as published by the Free Software Foundation, either version 2
+of the License, or (at your option) any later version, with the GNU
+Classpath Exception which is available at
+https://www.gnu.org/software/classpath/license.html."
+
+  Simply including a copy of this Agreement, including this Exhibit A
+  is not sufficient to license the Source Code under Secondary Licenses.
+
+  If it is not possible or desirable to put the notice in a particular
+  file, then You may include the notice in a location (such as a LICENSE
+  file in a relevant directory) where a recipient would be likely to
+  look for such a notice.
+
+  You may add additional accurate notices of copyright ownership.
diff --git a/README.md b/README.md
index e64cd28..adc6eff 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1,44 @@
-# gitAgent
-Git agent to assist in various git repository related tasks
+# git-agent
+
+FIXME: description
+
+## Installation
+
+Download from http://example.com/FIXME.
+
+## Usage
+
+FIXME: explanation
+
+    $ java -jar git-agent-0.1.0-standalone.jar [args]
+
+## Options
+
+FIXME: listing of options this app accepts.
+
+## Examples
+
+...
+
+### Bugs
+
+...
+
+### Any Other Sections
+### That You Think
+### Might be Useful
+
+## License
+
+Copyright © 2024 FIXME
+
+This program and the accompanying materials are made available under the
+terms of the Eclipse Public License 2.0 which is available at
+http://www.eclipse.org/legal/epl-2.0.
+
+This Source Code may also be made available under the following Secondary
+Licenses when the conditions for such availability set forth in the Eclipse
+Public License, v. 2.0 are satisfied: GNU General Public License as published by
+the Free Software Foundation, either version 2 of the License, or (at your
+option) any later version, with the GNU Classpath Exception which is available
+at https://www.gnu.org/software/classpath/license.html.
diff --git a/doc/intro.md b/doc/intro.md
new file mode 100644
index 0000000..dac94b0
--- /dev/null
+++ b/doc/intro.md
@@ -0,0 +1,3 @@
+# Introduction to git-agent
+
+TODO: write [great documentation](http://jacobian.org/writing/what-to-write/)
diff --git a/project.clj b/project.clj
new file mode 100644
index 0000000..32c5381
--- /dev/null
+++ b/project.clj
@@ -0,0 +1,10 @@
+(defproject git-agent "0.1.0-SNAPSHOT"
+  :description "FIXME: write description"
+  :url "http://example.com/FIXME"
+  :license {:name "EPL-2.0 OR GPL-2.0-or-later WITH Classpath-exception-2.0"
+            :url "https://www.eclipse.org/legal/epl-2.0/"}
+  :dependencies [[org.clojure/clojure "1.10.3"]]
+  :main ^:skip-aot git-agent.core
+  :target-path "target/%s"
+  :profiles {:uberjar {:aot :all
+                       :jvm-opts ["-Dclojure.compiler.direct-linking=true"]}})
diff --git a/src/git_agent/core.clj b/src/git_agent/core.clj
new file mode 100644
index 0000000..e941bd4
--- /dev/null
+++ b/src/git_agent/core.clj
@@ -0,0 +1,7 @@
+(ns git-agent.core
+  (:gen-class))
+
+(defn -main
+  "I don't do a whole lot ... yet."
+  [& args]
+  (println "Hello, World!"))
diff --git a/test/git_agent/core_test.clj b/test/git_agent/core_test.clj
new file mode 100644
index 0000000..ac495d1
--- /dev/null
+++ b/test/git_agent/core_test.clj
@@ -0,0 +1,7 @@
+(ns git-agent.core-test
+  (:require [clojure.test :refer :all]
+            [git-agent.core :refer :all]))
+
+(deftest a-test
+  (testing "FIXME, I fail."
+    (is (= 0 1))))

commit ebda7603203e8ab99935e5b2b6ce78bb4f6f08f2
Author: Aniket Hendre <hendre.ani@gmail.com>
Date:   Fri May 10 19:12:16 2024 +0530

    Initial commit

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..a4cb69a
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,14 @@
+pom.xml
+pom.xml.asc
+*.jar
+*.class
+/lib/
+/classes/
+/target/
+/checkouts/
+.lein-deps-sum
+.lein-repl-history
+.lein-plugins/
+.lein-failures
+.nrepl-port
+.cpcache/
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..76b773c
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2024 Aniket Hendre
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..e64cd28
--- /dev/null
+++ b/README.md
@@ -0,0 +1,2 @@
+# gitAgent
+Git agent to assist in various git repository related tasks
